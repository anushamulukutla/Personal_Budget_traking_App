import tkinter as tk
from tkinter import ttk
from tkinter import messagebox
import datetime
import csv

def Money_In_Frame():
    try:
        Total_sal = float(Total_sal_entry.get())
        Additional_income = float(Additional_income_entry.get())
        Total_income = Total_sal + Additional_income
        month = month_var.get()
        if not month:
            messagebox.showwarning("Input Error", "Please fill in all fields")
            return None
        return month, Total_income
    except ValueError:
        messagebox.showerror("Input Error", "Please enter valid numbers for salary and income")
        return None

def write_money_in_csv():
    Money_In_data = Money_In_Frame()
    if Money_In_data:
        month, Total_income = Money_In_data
        filename = f"{month}.csv"
        with open(filename, "a", newline='') as Money_infile:
            writer = csv.writer(Money_infile)
            writer.writerow([month, Total_income])

def Money_out_frame():
    category = category_var.get()
    date = entry_date.get()
    expenditure = entry_expenditure.get()
    if not (category and date and expenditure):
        messagebox.showwarning("Input Error", "PLEASE FILL IN ALL FIELDS")
        return None
    try:
        expenditure = float(expenditure)
        return category, date, expenditure
    except ValueError:
        messagebox.showerror("Input Error", "Expenditure should be a numeric value")
        return None

def write_money_out_csv():
    Money_out_data = Money_out_frame()
    if Money_out_data:
        category, date, expenditure = Money_out_data
        filename = "expenses.csv"
        with open(filename, "a", newline='') as csv_out:
            writer = csv.writer(csv_out)
            writer.writerow([category, date, expenditure])

def clear_function():
    Total_sal_entry.delete(0, tk.END)
    Additional_income_entry.delete(0, tk.END)
    entry_date.delete(0, tk.END)
    entry_date.insert(0, datetime.datetime.now().strftime("%Y-%m-%d"))
    entry_expenditure.delete(0, tk.END)
    category_var.set("")
    month_var.set("")

# Initialize the main window
window = tk.Tk()
window.title("PERSONAL BUDGET TRACKER")
window.geometry("800x600")

# Grid configuration
window.grid_columnconfigure(1, weight=1)

# Top Frame
label_top = ttk.Label(window, text="PERSONAL BUDGET", font=("Arial", 16, 'bold'))
label_top.grid(row=0, column=0, columnspan=2, sticky='ew', pady=20)

# Frame for MONEY_IN
money_in_frame = ttk.Frame(window, padding="10", relief="sunken", borderwidth=2)
money_in_frame.grid(row=1, column=0, sticky='nsew', padx=20, pady=20)

# Frame for MONEY_OUT
money_out_frame = ttk.Frame(window, padding="10", relief="sunken", borderwidth=2)
money_out_frame.grid(row=1, column=1, sticky='nsew', padx=20, pady=20)

# Money In Frame Widgets
Total_sal_label = ttk.Label(money_in_frame, text="Total Salary:")
Total_sal_label.grid(row=0, column=0, sticky='w', padx=5, pady=2)
Total_sal_entry = ttk.Entry(money_in_frame)
Total_sal_entry.grid(row=0, column=1, padx=5, pady=2)

Additional_income_label = ttk.Label(money_in_frame, text="Additional Income:")
Additional_income_label.grid(row=1, column=0, sticky='w', padx=5, pady=2)
Additional_income_entry = ttk.Entry(money_in_frame)
Additional_income_entry.grid(row=1, column=1, padx=5, pady=2)

month_dropdown_options=[
    " ","January", "February", "March", "April", "May", "June",
    "July", "August", "September", "October", "November", "December"
]
month_label = ttk.Label(money_in_frame, text="Month:")
month_label.grid(row=2, column=0, sticky='w', padx=5, pady=2)
month_var = tk.StringVar()
month_dropdown = ttk.Combobox(money_in_frame, textvariable=month_var, values=month_dropdown_options, state="readonly")
month_dropdown.grid(row=2, column=1, padx=5, pady=2)
month_dropdown.current(0)

submit_button = ttk.Button(money_in_frame, text="Submit Money In", command=write_money_in_csv)
submit_button.grid(row=3, column=0, columnspan=2, pady=10)

# Money Out Frame Widgets
date_label = ttk.Label(money_out_frame, text="Date:")
date_label.grid(row=0, column=0, sticky='w', padx=5, pady=2)
entry_date = ttk.Entry(money_out_frame)
entry_date.grid(row=0, column=1, padx=5, pady=2)
entry_date.insert(0, datetime.datetime.now().strftime("%Y-%m-%d"))


category_list_dropdown=[" ","RENT/EMI","Fuel","groceries","Food","Shopping","Creditcard bill",'hydro']
category_label = ttk.Label(money_out_frame, text="Category:")
category_label.grid(row=1, column=0, sticky='w', padx=5, pady=2)
category_var = tk.StringVar()
category_dropdown = ttk.Combobox(money_out_frame, textvariable=category_var, values=category_list_dropdown, state="readonly")
category_dropdown.grid(row=1, column=1, padx=5, pady=2)
category_dropdown.current(0)

expenditure_label = ttk.Label(money_out_frame, text="Expense Amount:")
expenditure_label.grid(row=2, column=0, sticky='w', padx=5, pady=2)
entry_expenditure = ttk.Entry(money_out_frame)
entry_expenditure.grid(row=2, column=1, padx=5, pady=2)

submit_button_out = ttk.Button(money_out_frame, text="Submit Money Out", command=write_money_out_csv)
submit_button_out.grid(row=3, column=0, columnspan=2, pady=10)

# Clear button
clear_button = ttk.Button(window, text="Clear Entry", command=clear_function, style='My.TButton')
clear_button.grid(row=4, column=0, columnspan=2, pady=10)

window.mainloop()
